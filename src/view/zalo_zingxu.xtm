
    <form name="frmCharge" id="frmCharge" method="post"
          onSubmit="return submitCharge();" action="/zaloresult">
        
    <div class="content">
        
        <div class="inside clearfix">
            <p class="line-account">Xin chào <strong><span id="acn"> {{accountname}}</span></strong> <a href="javascript:;" onclick="submitLogout();">(thay đổi tài khoản)</a></p>
            <p class="line-account ">Số Zing Xu hiện có: <span class="ico-xu">{{fmxubalance}}</span></p>
                     
            <p class="line-break"></p>
            <p><input name="zingxuamt" id="zingxuamt" type="number" tabindex="1" 
                      autofocus="true" {{disable}} value="{{zingxuamt}}" 
                      onkeyup ="FilterInput(event);" maxlength="6" min="1" max="999999"
                      placeholder="Số Zing Xu (tối thiểu là {{minzingxu}})"/></p><!--If OS=="Android" Then type="number" || Else type="tel"-->
            
                                    
            <p class="line-note" id="zingxu-calc">{{zingxu-calc}}</p>
            <p class="wrap-btn clear"><a href="javascript:;" onclick="submitCharge();"  class="btn-default" tabindex="2">Đồng ý</a></p>
           
        </div>
    </div>
    
    
        <input type="hidden" name ="xubalance" id ="xubalance" value="{{xubalance}}" />
         <input type="hidden" name="transid" value="{{transid}}"/>
         <input type="hidden" name="appid" value="{{appid}}"/>
         <input type="hidden" name="appdata" value="{{appdata}}"/>
         <input type="hidden" name="pmcid" value="{{pmcid}}"/>
         <input type="hidden" name ="apptransid" value="{{_n_apptranxid}}" />
    <input type="hidden" name ="appserverid" value="{{appserverid}}" />
    <input type="hidden" name ="pl" value="{{_n_platform}}" />
    
    <input type="hidden" name ="url_redirect" value="{{_n_url_redirect}}" />
    <input type="hidden" name ="isBack" id="isBack" value="0" />
    <input type="hidden" name ="_isdirect" id="_isdirect" value="{{_isdirect}}" />
    
       
       
    <script>

        //Function check zing xu
        (function(){
            var zingxuInput = document.getElementById("zingxuamt");

            //Add event listener
            if(zingxuInput != null){
                addEvent(zingxuInput,"keypress", preventInsertNonNumeric);
                addEvent(zingxuInput,"keyup", onNumberZingXuChanged);
               
                
            }

            //Prevent typing non numeric
            function preventInsertNonNumeric(evt){
                if ((evt.which < 48 || evt.which > 57)&&(evt.which!== 8))
                {
                    evt.preventDefault();
                }
            }

            //When number zingxu changed
            function onNumberZingXuChanged(){
                var numZingXu = parseInt(document.getElementById("zingxuamt").value);

                if(isNaN(numZingXu) || numZingXu < 1 || numZingXu > 999999){
                    zingxuInput.value = "";
                    calcZingXuValue(1);
                    return;
                }

                numZingXu = parseInt(numZingXu);
                calcZingXuValue(numZingXu);
            }

            //Calculate zingxu value
            function calcZingXuValue(number){
                
                var  html="<span class=\"num\">1</span> Zing Xu = <span class=\"val\">100</span> VNĐ";
                var zingXuResultEle = document.getElementById("zingxu-calc");
                if(zingXuResultEle!==null)
                {
                    zingXuResultEle.innerHTML=html;
                   
                } 
                validatechargeamt();
                var zingXuNumberEle = zingXuResultEle.getElementsByClassName("num")[0];
                var zingXuValueEle = zingXuResultEle.getElementsByClassName("val")[0];
                if(zingXuNumberEle != null && zingXuValueEle != null){
                    zingXuNumberEle.innerHTML = number.toLocaleString();
                    zingXuValueEle.innerHTML = (number*100).toLocaleString();
                }
            }

            // add event cross browser
            function addEvent(elem, event, fn) {
                if (elem.addEventListener) {
                    elem.addEventListener(event, fn, false);
                } else {
                    elem.attachEvent("on" + event, function() {
                        // set the this pointer same as addEventListener when fn is called
                        return(fn.call(elem, window.event));   
                    });
                }
            }
        })()
    </script>
    
     <script type="text/javascript">
           
            var submitclick = false; 
            var _minzingxu="{{minzingxu}}";
            
            function submitCharge()
            {
                if(validate())
                {

                    document.getElementById('frmCharge').action="/zaloresult";
                    document.getElementById('frmCharge').submit();
                    return true;
                }else
                    {
                        return false;
                    }
            }   
            
            function validate()
            {
                submitclick = true; 
                var resultvalidatechargeamt =  validatechargeamt();                         
                submitclick = false; 
                return resultvalidatechargeamt;
            }
            function validatechargeamt()
            {
                var numbers = /^[0-9]+$/;  
                var chargeAmt = document.getElementById('zingxuamt').value; 
                chargeAmt = chargeAmt.replace(/,/g, '');
                chargeAmt = chargeAmt.replace(/\./g, '');
                var xubalace = document.getElementById('xubalance').value; 
                if(!chargeAmt.match(numbers))  
                { 
                    
                    if(chargeAmt!=null&&chargeAmt.length >0)
                        document.getElementById('zingxu-calc').innerHTML="<p>Số ZingXu phải là kiểu số</p>";
                    else
                    {
                        var  html="<span class=\"num\">1</span> Zing Xu = <span class=\"val\">100</span> VNĐ";
                        document.getElementById('zingxu-calc').innerHTML=html;
                    }
                    return false;
                }                
                            
                if(Number(xubalace) < Number(chargeAmt))
                {
                    document.getElementById('zingxu-calc').innerHTML="<p>Bạn không đủ ZingXu để thanh toán</p>";
                    return false;
                }             
                if(Number(chargeAmt) < Number(_minzingxu))
                {
                    var  fmin = "{{minzingxu}}";
                    var  formatmin = insertCommas(fmin) ;
                    document.getElementById('zingxu-calc').innerHTML="<p>Số ZingXu phải lớn hơn hoặc bằng "+formatmin+"</p>";
                    return false;
                }        
                   
               return true;
            }
            
                function submitLogout()
                {                     
                    document.getElementById('frmCharge').action="/zalologinzingme?logout=1";
                    document.getElementById('frmCharge').submit();
                    
                   
                                      
                }
            
           function formatchargeamt(obj) 
           {       
               var number = obj.value;
              
                var amount = number.replace(/,/g, '');
                amount = amount.replace(/\./g, '');
                var arr = insertCommas(amount);        
        
                obj.value = arr; 
               
           }           
           function insertCommas(nStr)
            {

                return nStr.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
            }           
                       
            function FilterInput (event)
            {
                    var keyCode = ('which' in event) ? event.which : event.keyCode;

                    isNumeric = (keyCode >= 48 /* KeyboardEvent.DOM_VK_0 */ && keyCode <= 57 /* KeyboardEvent.DOM_VK_9 */) ||
                                (keyCode >= 96 /* KeyboardEvent.DOM_VK_NUMPAD0 */ && keyCode <= 105 /* KeyboardEvent.DOM_VK_NUMPAD9 */)
                                || (keyCode===8);
                 
                    if(isNumeric)
                        {
                             
                             validatechargeamt();
                        }
                    if (event.which === 13) 
                    {
                        event.preventDefault();
                        submitCharge();
                    }
            }
         
          
           
        </script>
    
    </form>     
        
